@using ResumeBuilder.Shared.Models;
@using ResumeBuilder.UI.Services.Interfaces;

<button class="section-selector @(StateService.IsUserInfoVisible ? "active" : "inactive")"
@onclick="@OnUserPressed">
    Your Details
</button>

<button class="section-selector @(StateService.IsAddressInfoVisible ? "active" : "inactive")"
@onclick="@OnAddressPressed">
    Address
</button>

<button class="section-selector @(StateService.IsSocialsInfoVisible ? "active" : "inactive")"
@onclick="@OnSocialsPressed">
    Socials
</button>

<button class="section-selector @(StateService.IsSkillsInfoVisible ? "active" : "inactive")"
@onclick="@OnSkillsPressed">
    Skills
</button>

<button class="section-selector @(StateService.IsExperienceInfoVisible ? "active" : "inactive")"
@onclick="@OnExperiencesPressed">
    Experience
</button>

<button class="section-selector @(StateService.IsEducationInfoVisible ? "active" : "inactive")"
@onclick="@OnEducationPressed">
    Education
</button>

<button class="section-selector @(StateService.IsProjectInfoVisible ? "active" : "inactive")"
@onclick="@OnProjectsPressed">
    Projects
</button>

@code {
    [Parameter]
    public required IActiveStateService StateService { get; set; }

    [Parameter]
    public required EventCallback OnUpdate { get; set; }

    private async void OnUserPressed()
    {
        StateService.IsUserInfoVisible = !StateService.IsUserInfoVisible;
        await OnUpdate.InvokeAsync();
    }

    private async void OnAddressPressed()
    {
        StateService.IsAddressInfoVisible = !StateService.IsAddressInfoVisible;
        await OnUpdate.InvokeAsync();
    }

    private async void OnSocialsPressed()
    {
        StateService.IsSocialsInfoVisible = !StateService.IsSocialsInfoVisible;
        await OnUpdate.InvokeAsync();
    }

    private async void OnSkillsPressed()
    {
        StateService.IsSkillsInfoVisible = !StateService.IsSkillsInfoVisible;
        await OnUpdate.InvokeAsync();
    }

    private async void OnExperiencesPressed()
    {
        StateService.IsExperienceInfoVisible = !StateService.IsExperienceInfoVisible;
        await OnUpdate.InvokeAsync();
    }

    private async void OnEducationPressed()
    {
        StateService.IsEducationInfoVisible = !StateService.IsEducationInfoVisible;
        await OnUpdate.InvokeAsync();
    }

    private async void OnProjectsPressed()
    {
        StateService.IsProjectInfoVisible = !StateService.IsProjectInfoVisible;
        await OnUpdate.InvokeAsync();
    }
}
