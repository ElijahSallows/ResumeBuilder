@using ResumeBuilder.Shared.Models;
@inherits ResumeListView<Experience>

<h2 class="section-header">
    <span>Experiences</span>
</h2>

@foreach (var experience in List)
{
    <div class="experience list-wrapper">
        <div class="experience-delete-wrapper delete-wrapper">
            <button @onclick="() => Delete(experience)" class="oi oi-trash"></button>
        </div>

        <div class="input-wrapper">
            <label for="exp-title">
                <span class="label">Title</span>
            </label>
            <InputText class="input bordered input-text" placeholder="Type here..." id="exp-title" @bind-Value="experience.Title" />
        </div>

        <div class="input-wrapper">
            <label for="exp-name">
                <span class="label">Company Name</span>
            </label>
            <InputText class="input bordered input-text" placeholder="Type here..." id="exp-name" @bind-Value="experience.CompanyName" />
        </div>

        <div class="dates-wrapper">
            <div class="input-wrapper">
                <label for="exp-start">
                    <span class="label">Start Date</span>
                </label>
                <InputDate class="input bordered input-date" id="exp-start" @bind-Value="experience.StartDate" TValue="DateTime" />
            </div>

            <div class="input-wrapper">
                <label for="exp-end">
                    <span class="label">End Date</span>
                </label>
                @* Bug at https://github.com/dotnet/razor/issues/7684 forces us to use string interpolation *@
                <InputDate class=@($"input bordered input-date {(experience.Current ? "disabled" : "")}")
                           id="exp-end"
                @bind-Value="experience.EndDate"
                           TValue="DateTime"
                           disabled="@experience.Current" />
            </div>

            <div class="input-wrapper">
                <label for="exp-current">
                    <span class="label">Current?</span>
                </label>
                <InputCheckbox class="input bordered input-check" id="exp-current" @bind-Value="experience.Current" />
            </div>
        </div>
        <InputTextList List="experience.Points"
                       T=Experience
                       OnUpdated="@OnUpdated" />
    </div>
}
<div class="add-wrapper">
    <div class="add">

        <button class="oi oi-plus" @onclick="@OnAddClicked"></button>
    </div>
</div>

@code {

}
